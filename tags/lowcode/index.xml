<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lowcode on Luca Burgazzoli</title><link>https://lburgazzoli.github.io/tags/lowcode/</link><description>Recent content in lowcode on Luca Burgazzoli</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 15 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lburgazzoli.github.io/tags/lowcode/index.xml" rel="self" type="application/rss+xml"/><item><title>Apache Camel Pulsar Function, Part 1</title><link>https://lburgazzoli.github.io/posts/2023-06-13-apache-camel-pulsar-function-pt_1/</link><pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate><guid>https://lburgazzoli.github.io/posts/2023-06-13-apache-camel-pulsar-function-pt_1/</guid><description>I recently came across an interesting article from DataStax about simplified, low-code friendly data piepelines with Pulsar Function and since I always wanted to learn a little bit more about Apache Pulsar and I&amp;rsquo;ve been working on something similar, I&amp;rsquo;ve started exploring how a Pulsar Function based on Apache Camel would look like.
Background To get started, let&amp;rsquo;s have a basic understanding of Apache Pulsar and Apache Camel:
Apache Pulsar is an open-source, distributed messaging and streaming platform built for the cloud.</description></item></channel></rss>